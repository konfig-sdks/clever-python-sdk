# coding: utf-8

"""
    Data API

    Serves the Clever Data API

    The version of the OpenAPI document: 3.1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from clever_python_sdk.pydantic.credentials import Credentials
from clever_python_sdk.pydantic.name import Name
from clever_python_sdk.pydantic.teacher_schools import TeacherSchools

class Teacher(BaseModel):
    title: typing.Optional[typing.Optional[str]] = Field(None, alias='title')

    created: typing.Optional[str] = Field(None, alias='created')

    credentials: typing.Optional[Credentials] = Field(None, alias='credentials')

    district: typing.Optional[str] = Field(None, alias='district')

    ext: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(None, alias='ext')

    last_modified: typing.Optional[str] = Field(None, alias='last_modified')

    legacy_id: typing.Optional[str] = Field(None, alias='legacy_id')

    name: typing.Optional[Name] = Field(None, alias='name')

    school: typing.Optional[str] = Field(None, alias='school')

    schools: typing.Optional[TeacherSchools] = Field(None, alias='schools')

    sis_id: typing.Optional[str] = Field(None, alias='sis_id')

    state_id: typing.Optional[typing.Optional[str]] = Field(None, alias='state_id')

    teacher_number: typing.Optional[typing.Optional[str]] = Field(None, alias='teacher_number')
    class Config:
        arbitrary_types_allowed = True
