# coding: utf-8

"""
    Data API

    Serves the Clever Data API

    The version of the OpenAPI document: 3.1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from clever_python_sdk.pydantic.credentials import Credentials
from clever_python_sdk.pydantic.disability import Disability
from clever_python_sdk.pydantic.location import Location
from clever_python_sdk.pydantic.preferred_name import PreferredName
from clever_python_sdk.pydantic.school_enrollment import SchoolEnrollment
from clever_python_sdk.pydantic.student_schools import StudentSchools

class Student(BaseModel):
    created: typing.Optional[str] = Field(None, alias='created')

    credentials: typing.Optional[Credentials] = Field(None, alias='credentials')

    disability: typing.Optional[Disability] = Field(None, alias='disability')

    dob: typing.Optional[typing.Optional[str]] = Field(None, alias='dob')

    ell_status: typing.Optional[Literal["Y", "N", ""]] = Field(None, alias='ell_status')

    enrollments: typing.Optional[typing.List[SchoolEnrollment]] = Field(None, alias='enrollments')

    ext: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(None, alias='ext')

    frl_status: typing.Optional[Literal["Free", "Reduced", "Paid", "Other", ""]] = Field(None, alias='frl_status')

    gender: typing.Optional[Literal["M", "F", "X", ""]] = Field(None, alias='gender')

    gifted_status: typing.Optional[Literal["Y", "N", ""]] = Field(None, alias='gifted_status')

    grade: typing.Optional[Literal["InfantToddler", "Preschool", "PreKindergarten", "TransitionalKindergarten", "Kindergarten", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "PostGraduate", "Ungraded", "Other", ""]] = Field(None, alias='grade')

    graduation_year: typing.Optional[typing.Optional[str]] = Field(None, alias='graduation_year')

    hispanic_ethnicity: typing.Optional[Literal["Y", "N", ""]] = Field(None, alias='hispanic_ethnicity')

    home_language: typing.Optional[Literal["Basque", "Portuguese", "Hungarian", "Hmong", "Urdu", "Latvian", "Hausa", "Slovenian", "Chinese (Mandarin)", "Russian", "Arabic", "Telugu", "Afrikaans", "Tamil", "Irish", "Uzbek", "Norwegian", "Serbian", "Khmer", "Farsi", "Lao", "Gujarati", "Yiddish", "Lithuanian", "Mongolian", "Samoan", "Bengali", "Corsican", "Romanian", "Javanese", "Danish", "Scots Gaelic", "Burmese", "Kinyarwanda", "Swahili", "Yoruba", "Uyghur", "Hindi", "Azerbaijani", "Cabo Verdean", "Haitian Creole", "Amharic", "Maori", "Somali", "English", "Hawaiian", "Maltese", "Thai", "Slovak", "Nepali", "Bosnian", "Marathi", "Frisian", "Swedish", "Kazakh", "German", "Turkish", "Chinese", "Luxembourgish", "Armenian", "Dari", "Macedonian", "Karen", "Iloko", "Igbo", "Kannada", "Galician", "Cebuano", "Punjabi", "Indonesian", "Estonian", "Odia", "Spanish", "Filipino", "Albanian", "Korean", "Croatian", "Japanese", "Bulgarian", "Catalan", "Polish", "Sinhala", "Other", "Icelandic", "Tatar", "Ukrainian", "Tajik", "Italian", "French", "Malayalam", "Chichewa", "Kurdish (Kurmanji)", "Czech", "Xhosa", "Hebrew", "Georgian", "Oromo", "Shona", "Sindhi", "Sesotho", "Tagalog", "Malagasy", "Tigrinya", "Welsh", "Turkmen", "Malay", "Marshallese", "Belarusian", "Dutch", "Finnish", "Greek", "Kyrgyz", "Zulu", "Sundanese", "Vietnamese", "Pashto"]] = Field(None, alias='home_language')

    home_language_code: typing.Optional[Literal["hau", "ilo", "dan", "som", "xho", "slv", "bos", "cos", "ces", "mlg", "vie", "bel", "hin", "hun", "mon", "pan", "tgk", "heb", "prs", "mlt", "pus", "tir", "eng", "mar", "nld", "est", "zho", "fas", "fry", "jpn", "aze", "rus", "gla", "yor", "cmn", "bul", "fin", "hmn", "ita", "pol", "ara", "ell", "khm", "mkd", "cpp", "ibo", "urd", "cym", "hat", "lao", "ltz", "snd", "swa", "mya", "ori", "kat", "smo", "spa", "kor", "nob", "ron", "tha", "ind", "fra", "tel", "hye", "guj", "isl", "msa", "slk", "swe", "tuk", "eus", "kaz", "mal", "kan", "amh", "orm", "afr", "fil", "haw", "lav", "sin", "yid", "ben", "kir", "mri", "tam", "glg", "ceb", "tat", "zul", "lit", "nep", "por", "sot", "other", "nya", "sun", "cat", "tgl", "ukr", "uzb", "gle", "srp", "deu", "jav", "kur", "mah", "sna", "uig", "kin", "hrv", "kar", "tur", "sqi"]] = Field(None, alias='home_language_code')

    iep_status: typing.Optional[typing.Optional[str]] = Field(None, alias='iep_status')

    last_modified: typing.Optional[str] = Field(None, alias='last_modified')

    legacy_id: typing.Optional[str] = Field(None, alias='legacy_id')

    location: typing.Optional[Location] = Field(None, alias='location')

    preferred_name: typing.Optional[PreferredName] = Field(None, alias='preferred_name')

    race: typing.Optional[Literal["Caucasian", "Asian", "Black or African American", "American Indian", "Hawaiian or Other Pacific Islander", "Two or More Races", "Unknown", ""]] = Field(None, alias='race')

    school: typing.Optional[str] = Field(None, alias='school')

    schools: typing.Optional[StudentSchools] = Field(None, alias='schools')

    section_504_status: typing.Optional[Literal["Y", "N", ""]] = Field(None, alias='section_504_status')

    sis_id: typing.Optional[str] = Field(None, alias='sis_id')

    state_id: typing.Optional[typing.Optional[str]] = Field(None, alias='state_id')

    student_number: typing.Optional[typing.Optional[str]] = Field(None, alias='student_number')
    class Config:
        arbitrary_types_allowed = True
